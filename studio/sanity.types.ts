/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch';
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: 'sanity.imagePalette';
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions';
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: 'sanity.fileAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: 'geopoint';
  lat?: number;
  lng?: number;
  alt?: number;
};

export type NewsBanner = {
  _id: string;
  _type: 'newsBanner';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  enabled?: boolean;
  text?: string;
  linkUrl?: string;
  language?: string;
};

export type TextBlock = {
  _type: 'textBlock';
  title?: string;
  text?: Array;
};

export type RichText = Array;

export type MetadataLink = {
  _type: 'metadataLink';
  text?: string;
  url?: string;
};

export type MetadataField = {
  _type: 'metadataField';
  key?: string;
  values?: Array;
};

export type MetadataBlock = {
  _type: 'metadataBlock';
  title?: string;
  metadataFields?: Array;
  metadataLinks?: Array;
};

export type SanityImageCrop = {
  _type: 'sanity.imageCrop';
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot';
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: 'sanity.imageAsset';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData';
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata';
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type GalleryBlock = {
  _type: 'galleryBlock';
  title?: string;
  images?: Array;
};

export type TranslationMetadata = {
  _id: string;
  _type: 'translation.metadata';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  translations?: Array;
  schemaTypes?: Array;
};

export type InternationalizedArrayReferenceValue = {
  _type: 'internationalizedArrayReferenceValue';
  value?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'project';
  };
};

export type Project = {
  _id: string;
  _type: 'project';
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  headline?: string;
  date?: string;
  coverImage?: {
    asset?: {
      _ref: string;
      _type: 'reference';
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    caption?: string;
    _type: 'imageWithAlt';
  };
  featured?: boolean;
  type?: 'CASE_STUDY' | 'SIDE_PROJECT';
  preamble?: string;
  caseStudyBlocks?: Array;
  linkUrl?: string;
  language?: string;
  orderRank?: string;
};

export type ImageWithAlt = {
  _type: 'imageWithAlt';
  asset?: {
    _ref: string;
    _type: 'reference';
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: 'sanity.imageAsset';
  };
  hotspot?: SanityImageHotspot;
  crop?: SanityImageCrop;
  alt?: string;
  caption?: string;
};

export type Slug = {
  _type: 'slug';
  current?: string;
  source?: string;
};

export type InternationalizedArrayReference = Array;

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | NewsBanner
  | TextBlock
  | RichText
  | MetadataLink
  | MetadataField
  | MetadataBlock
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | GalleryBlock
  | TranslationMetadata
  | InternationalizedArrayReferenceValue
  | Project
  | ImageWithAlt
  | Slug
  | InternationalizedArrayReference;
export declare const internalGroqTypeReferenceTo: unique symbol;
