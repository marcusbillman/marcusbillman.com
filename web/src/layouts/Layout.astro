---
import Navigation from '@/components/Navigation';
import Footer from '@/components/sections/FooterSection';
import { Toaster } from 'react-hot-toast';
import { useTailwindConfig } from '@/util/tailwind';

interface Props {
  title?: string;
  noHeader?: boolean;
}

const { title, noHeader = false } = Astro.props;
const tailwindConfig = useTailwindConfig();
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Serif:ital,wght@1,400;1,500&family=Manrope:wght@200..800&display=swap"
      rel="stylesheet"
    />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />

    <!-- HTML meta tags -->
    <title>{title && title + ' |'} Marcus Billman</title>
    <meta
      name="description"
      content="I love designing interfaces, writing code and spreading the joy of creating cool things. I’m also a tech enthusiast and hobbyist musician."
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- Open Graph meta tags -->
    <meta property="og:url" content="https://marcusbillman.com" />
    <meta property="og:type" content="website" />
    <meta
      property="og:title"
      content="Marcus Billman — Designer, developer and human"
    />
    <meta
      property="og:description"
      content="I love designing interfaces, writing code and spreading the joy of creating cool things. I’m also a tech enthusiast and hobbyist musician."
    />
    <meta
      property="og:image"
      content="https://marcusbillman.com/assets/images/social-embed.jpg"
    />

    <!-- Twitter meta tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content="marcusbillman.com" />
    <meta property="twitter:url" content="https://marcusbillman.com" />
    <meta
      name="twitter:title"
      content="Marcus Billman — Designer, developer and human"
    />
    <meta
      name="twitter:description"
      content="I love designing interfaces, writing code and spreading the joy of creating cool things. I’m also a tech enthusiast and hobbyist musician."
    />
    <meta
      name="twitter:image"
      content="https://marcusbillman.com/assets/images/social-embed.jpg"
    />
  </head>
  <body class="min-h-screen cursor-default bg-default text-default">
    <Navigation client:load />
    <div class="overflow-clip rounded-b-4xl lg:rounded-b-6xl">
      {!noHeader && <slot name="header" />}
      <main
        class={`${noHeader ? '' : '-mt-8 rounded-t-4xl lg:-mt-16 lg:rounded-t-6xl'} relative z-20 bg-default shadow-main-container`}
      >
        {
          !noHeader && (
            <div class="absolute left-1/2 top-4 h-1 w-16 -translate-x-1/2 rounded-full bg-subtle lg:hidden" />
          )
        }
        <slot />
      </main>
    </div>
    <Footer client:visible />
    <Toaster
      client:idle
      position="bottom-center"
      toastOptions={{
        duration: 3000,
        style: {
          background: tailwindConfig.theme.backgroundColor.default.toString(),
          color: tailwindConfig.theme.textColor.default.toString(),
          border: `1px solid ${tailwindConfig.theme.borderColor.default.toString()}`,
          borderRadius: tailwindConfig.theme.borderRadius.full,
          fontSize: 20,
        },
        success: {
          iconTheme: {
            primary: tailwindConfig.theme.backgroundColor.primary.toString(),
            secondary: tailwindConfig.theme.textColor['on-primary'].toString(),
          },
        },
        error: {
          iconTheme: {
            primary: tailwindConfig.theme.colors.orange[500].toString(),
            secondary: tailwindConfig.theme.textColor['on-primary'].toString(),
          },
        },
      }}
      containerStyle={{
        bottom: 32,
      }}
    />
  </body>
</html>
<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer base {
    /* Light theme (default) */
    :root {
      --text-default: theme('colors.gray.900');
      --text-subtle: theme('colors.gray.500');
      --text-primary: theme('colors.blueberry.500');
      --text-on-primary: theme('colors.white');
      --text-on-inverted: theme('colors.white');
      --bg-default: theme('colors.white');
      --bg-subtle: theme('colors.gray.100');
      --bg-primary: theme('colors.blueberry.500');
      --bg-inverted: theme('colors.black');
      --border-default: theme('colors.gray.200');
      --border-strong: theme('colors.gray.400');
      --border-primary: theme('colors.blueberry.500');
      --illustration-primary: theme('colors.blueberry.500');
      --illustration-secondary: theme('colors.blueberry.600');
      --overlay-dim-default: hsl(0 0 100% / 0.6);
      --overlay-dim-strong: hsl(0 0 100% / 0.8);
    }

    /* Dark theme (system) */
    @media (prefers-color-scheme: dark) {
      :root {
        --text-default: theme('colors.white');
        --text-subtle: theme('colors.gray.400');
        --text-primary: theme('colors.blueberry.300');
        --text-on-primary: theme('colors.white');
        --text-on-inverted: theme('colors.black');
        --bg-default: theme('colors.gray.900');
        --bg-subtle: theme('colors.gray.800');
        --bg-primary: theme('colors.blueberry.500');
        --bg-inverted: theme('colors.white');
        --border-default: theme('colors.gray.700');
        --border-strong: theme('colors.gray.600');
        --border-primary: theme('colors.blueberry.300');
        --illustration-primary: theme('colors.blueberry.300');
        --illustration-secondary: theme('colors.blueberry.100');
        --overlay-dim-default: hsl(0 0 0% / 0.6);
        --overlay-dim-strong: hsl(0 0 0% / 0.8);
      }
    }

    /* Dark theme (manual) */
    /* Same values as above. Can't avoid repetition, unfortunately. */
    .dark {
      --text-default: theme('colors.white');
      --text-subtle: theme('colors.gray.400');
      --text-primary: theme('colors.blueberry.300');
      --text-on-primary: theme('colors.white');
      --text-on-inverted: theme('colors.black');
      --bg-default: theme('colors.gray.900');
      --bg-subtle: theme('colors.gray.800');
      --bg-primary: theme('colors.blueberry.500');
      --bg-inverted: theme('colors.white');
      --border-default: theme('colors.gray.700');
      --border-strong: theme('colors.gray.600');
      --border-primary: theme('colors.blueberry.300');
      --illustration-primary: theme('colors.blueberry.300');
      --illustration-secondary: theme('colors.blueberry.100');
      --overlay-dim-default: hsl(0 0 0% / 0.6);
      --overlay-dim-strong: hsl(0 0 0% / 0.8);
    }
  }

  @layer utilities {
    .cursor-default {
      @apply cursor-default-light dark:cursor-default-dark;
    }

    .cursor-text {
      @apply cursor-text-light dark:cursor-text-dark;
    }

    .cursor-pointer {
      @apply cursor-pointer-light dark:cursor-pointer-dark;
    }

    .cursor-move {
      @apply cursor-move-light dark:cursor-move-dark;
    }
  }

  @layer components {
    a:hover,
    button:hover {
      @apply cursor-pointer;
    }

    label {
      @apply cursor-default;
    }

    input,
    textarea {
      @apply cursor-text;
    }

    ::selection {
      @apply bg-primary text-on-primary;
    }
  }
</style>
