---
import t from '@/utils/i18n';

interface Props {
  title?: string;
}

const { title } = Astro.props;
const language = import.meta.env.PUBLIC_LOCALE || 'en';
---

<!doctype html>
<html lang={language} class="motion-safe:scroll-smooth">
  <head>
    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=IBM+Plex+Serif:ital,wght@1,400;1,500&family=Manrope:wght@200..800&display=swap"
      rel="stylesheet"
    />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.ico" />

    <!-- HTML meta tags -->
    <title>
      {title ? `${title} | ${t('common.fullName')}` : t('common.fullName')}
    </title>
    <meta name="description" content={t('seo.description')} />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />

    <!-- Open Graph meta tags -->
    <meta property="og:url" content={t('common.baseUrl')} />
    <meta property="og:type" content="website" />
    <meta property="og:title" content={t('seo.title')} />
    <meta property="og:description" content={t('seo.description')} />
    <meta
      property="og:image"
      content={`${t('common.baseUrl')}/assets/images/social-embed-${language}.jpg`}
    />

    <!-- Twitter meta tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta property="twitter:domain" content={t('common.domain')} />
    <meta property="twitter:url" content={t('common.baseUrl')} />
    <meta name="twitter:title" content={t('seo.title')} />
    <meta name="twitter:description" content={t('seo.description')} />
    <meta
      name="twitter:image"
      content={`${t('common.baseUrl')}/assets/images/social-embed-${language}.jpg`}
    />

    <!-- Theme script -->
    <script is:inline>
      const theme = JSON.parse(localStorage.getItem('theme'));

      if (theme === 'light') {
        document.documentElement.classList.add('light');
        document.documentElement.classList.remove('dark');
      } else if (theme === 'dark') {
        document.documentElement.classList.add('dark');
        document.documentElement.classList.remove('light');
      } else {
        document.documentElement.classList.remove('light', 'dark');
      }
    </script>
  </head>
  <body class="cursor-default bg-default text-default">
    <slot />
    <script src="@/scripts/console-greeting"></script>
  </body>
</html>
<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @layer base {
    /* Light theme (default) */
    :root {
      --text-default: theme('colors.gray.900');
      --text-subtle: theme('colors.gray.500');
      --text-primary: theme('colors.blueberry.500');
      --text-on-primary: theme('colors.white');
      --text-on-inverted: theme('colors.white');
      --bg-default: theme('colors.white');
      --bg-subtle: theme('colors.gray.100');
      --bg-primary: theme('colors.blueberry.500');
      --bg-inverted: theme('colors.black');
      --border-default: theme('colors.gray.200');
      --border-strong: theme('colors.gray.400');
      --border-primary: theme('colors.blueberry.500');
      --illustration-primary: theme('colors.blueberry.500');
      --illustration-secondary: theme('colors.blueberry.600');
      --overlay-dim-default: hsl(0 0 100% / 0.6);
      --overlay-dim-strong: hsl(0 0 100% / 0.8);
    }

    /* Dark theme (system) */
    @media (prefers-color-scheme: dark) {
      :root:not(.light) {
        --text-default: theme('colors.gray.100');
        --text-subtle: theme('colors.gray.400');
        --text-primary: theme('colors.blueberry.300');
        --text-on-primary: theme('colors.gray.100');
        --text-on-inverted: theme('colors.black');
        --bg-default: theme('colors.gray.900');
        --bg-subtle: theme('colors.gray.800');
        --bg-primary: theme('colors.blueberry.500');
        --bg-inverted: theme('colors.gray.100');
        --border-default: theme('colors.gray.700');
        --border-strong: theme('colors.gray.600');
        --border-primary: theme('colors.blueberry.300');
        --illustration-primary: theme('colors.blueberry.300');
        --illustration-secondary: theme('colors.blueberry.100');
        --overlay-dim-default: hsl(0 0 0% / 0.6);
        --overlay-dim-strong: hsl(0 0 0% / 0.8);
      }
    }

    /* Dark theme (manual) */
    /* Same values as above. Can't avoid repetition, unfortunately. */
    .dark {
      --text-default: theme('colors.gray.100');
      --text-subtle: theme('colors.gray.400');
      --text-primary: theme('colors.blueberry.300');
      --text-on-primary: theme('colors.gray.100');
      --text-on-inverted: theme('colors.black');
      --bg-default: theme('colors.gray.900');
      --bg-subtle: theme('colors.gray.800');
      --bg-primary: theme('colors.blueberry.500');
      --bg-inverted: theme('colors.gray.100');
      --border-default: theme('colors.gray.700');
      --border-strong: theme('colors.gray.600');
      --border-primary: theme('colors.blueberry.300');
      --illustration-primary: theme('colors.blueberry.300');
      --illustration-secondary: theme('colors.blueberry.100');
      --overlay-dim-default: hsl(0 0 0% / 0.6);
      --overlay-dim-strong: hsl(0 0 0% / 0.8);
    }
  }

  @layer utilities {
    .cursor-default {
      @apply cursor-default-light dark:cursor-default-dark;
    }

    .cursor-text {
      @apply cursor-text-light dark:cursor-text-dark;
    }

    .cursor-pointer {
      @apply cursor-pointer-light dark:cursor-pointer-dark;
    }

    .cursor-move {
      @apply cursor-move-light dark:cursor-move-dark;
    }
  }

  @layer components {
    a:hover,
    button:hover {
      @apply cursor-pointer;
    }

    label {
      @apply cursor-default;
    }

    input,
    textarea {
      @apply cursor-text;
    }

    ::selection {
      @apply bg-primary text-on-primary;
    }
  }
</style>
